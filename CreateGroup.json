{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "0.0.1",
    "title" : "Create Group.",
    "description" : "As a backend developer, I need to design an endpoint that allows an admin to create a group"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/happiestminds4/SSAC-28-Create-Group/0.0.1"
  }, {
    "description" : "Admin center server",
    "url" : "https://admincenterapp.com/v1"
  } ],
  "tags" : [ {
    "name" : "Groups",
    "description" : "Operations about users"
  } ],
  "paths" : {
    "/groups" : {
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Create group",
        "description" : "Create group in smartsheet",
        "operationId" : "createGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Group created successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "400" : {
            "description" : "The specified parameter are not valid.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "403" : {
            "description" : "Permission denied",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Group" : {
        "type" : "object",
        "required" : [ "name" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "id of newly created object which is part of response"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "enum" : [ "BAD REQUEST", "UNATHORISED" ]
          },
          "message" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          }
        },
        "required" : [ "reason", "message", "path" ]
      }
    }
  }
}